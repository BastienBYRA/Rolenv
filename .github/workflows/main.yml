name: Build and Release

on:
  push:
    branches:
      - test-release

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
          - os: windows-latest
            goos: windows
            goarch: amd64
          - os: macos-latest
            goos: darwin
            goarch: amd64

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.23.5'

    - name: Extract version from version file
      id: get_version
      run: |
        if [ "${{ runner.os }}" = "Windows" ]; then
          # Pour Windows (PowerShell)
          VERSION=$(powershell -command "Get-Content version")
          powershell -command "Add-Content -Path \$env:GITHUB_ENV -Value 'VERSION=$VERSION'"
        else
          # Pour Linux/macOS (Bash)
          VERSION=$(cat version)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
        fi
      shell: bash

    - name: Build
      run: |
        GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o rolenv-${{ matrix.goos }}-${{ matrix.goarch }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: rolenv-${{ matrix.goos }}-${{ matrix.goarch }}
        path: rolenv-${{ matrix.goos }}-${{ matrix.goarch }}

  create_release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Extract version from version file
      id: get_version
      run: |
        VERSION=$(cat version)
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ env.VERSION }}
        name: Release v${{ env.VERSION }}
        body: "Automated release generated by GitHub Actions."
        draft: false
        prerelease: false
        files: |
          artifacts/rolenv-linux-amd64
          artifacts/rolenv-windows-amd64
          artifacts/rolenv-darwin-amd64
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}