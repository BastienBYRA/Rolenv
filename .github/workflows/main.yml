name: Build and Release
on:
  push:
    branches:
      - test-release

permissions:
  contents: write
  
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        goos: [linux, windows, darwin]
        goarch: [amd64]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.23.5'

    - name: Build
      run: |
        GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o rolenv-${{ matrix.goos }}-${{ matrix.goarch }}

    - name: Create Release
      if: ${{ matrix.os == 'ubuntu-latest' }}
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./rolenv-${{ matrix.goos }}-${{ matrix.goarch }}
        asset_name: rolenv-${{ matrix.goos }}-${{ matrix.goarch }}
        asset_content_type: application/octet-stream