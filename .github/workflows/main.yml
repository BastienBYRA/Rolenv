name: Build and Release

on:
  push:
    branches:
      - test-release

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
          - os: windows-latest
            goos: windows
            goarch: amd64
          - os: macos-latest
            goos: darwin
            goarch: amd64

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.23.5'

    - name: Extract version from version file
      id: get_version
      run: |
        VERSION=$(cat version)
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Build
      run: |
        GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o rolenv-${{ matrix.goos }}-${{ matrix.goarch }}

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: rolenv-${{ matrix.goos }}-${{ matrix.goarch }}
        path: rolenv-${{ matrix.goos }}-${{ matrix.goarch }}

  create_release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts

    - name: Extract version from version file
      id: get_version
      run: |
        VERSION=$(cat version)
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.VERSION }}
        release_name: Release v${{ env.VERSION }}
        draft: false
        prerelease: false

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/rolenv-${{ matrix.goos }}-${{ matrix.goarch }}
        asset_name: rolenv-${{ matrix.goos }}-${{ matrix.goarch }}
        asset_content_type: application/octet-stream